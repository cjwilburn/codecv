
name: Upload Binaries

on:
  release:
    types: [ published ]

jobs:
  uploadDistribution:
    name: Upload Distribution
    runs-on: ubuntu-latest
    defaults:
      run: { shell: bash }
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
      - name: Build Distribution
        run: ./gradlew installDist
      - name: Rename Distribution
        run: mv build/install/codecv build/install/codecv-${{ github.ref_name }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: CodeCV-${{ github.ref_name }}
          path: build/install/codecv-${{ github.ref_name }}
          retention-days: 1

  uploadNative:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    name: Upload Native (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run: { shell: bash }
    steps:
      - name: Check Out
        uses: actions/checkout@v3
      - name: Install UPX (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install upx
      - name: Install UPX (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install upx
      - name: Install Java
        uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          java-version: 17
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: native-image,llvm
          cache: gradle
      - name: Run Tests
        run: ./gradlew -Pagent test
      - name: Run Tests
        run: ./gradlew metadataCopy
      - name: Build Native
        run: ./gradlew tarNative
      - name: Start Native (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          chmod +x build/native/nativeCompile/codecv.exe
          ./build/native/nativeCompile/codecv.exe &
      - name: Start Native (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          chmod +x build/native/nativeCompile/codecv
          ./build/native/nativeCompile/codecv &
      - name: Start Native (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: curl http://localhost:2010/openapi.yml
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: CodeCV-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}
          path: build/native/nativeCompile/codecv*
          retention-days: 1
