
on:
  release:
    types: [ published ]

jobs:
  upload_distribution:
    runs-on: ubuntu-latest
    defaults:
      run: { shell: bash }
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          distribution: graalvm-community
          java-version: 21
          cache: gradle
      - run: ./gradlew installDist
      - run: mv build/install/codecv build/install/codecv-${{ github.ref_name }}
      - uses: actions/upload-artifact@v3
        with:
          name: CodeCV-${{ github.ref_name }}
          path: build/install/codecv-${{ github.ref_name }}
          retention-days: 1

  upload_native:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    name: upload_native (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run: { shell: bash }
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          distribution: graalvm-community
          java-version: 21
          cache: gradle
      - run: ./gradlew nativeTest
      - run: ./gradlew zipNative
      - if: ${{ matrix.os == 'windows-latest' }}
        run: |
          chmod +x build/native/nativeCompile/codecv.exe
          ./build/native/nativeCompile/codecv.exe examples/full.cv.json &
      - if: ${{ matrix.os != 'windows-latest' }}
        run: |
          chmod +x build/native/nativeCompile/codecv
          ./build/native/nativeCompile/codecv examples/full.cv.json &
      - if: ${{ matrix.os != 'windows-latest' }}
        run: curl http://localhost:2010/openapi.yml
      - uses: actions/upload-artifact@v3
        with:
          name: CodeCV-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}
          retention-days: 1
          path: |
            build/native/nativeCompile/codecv
            build/native/nativeCompile/codecv.exe
